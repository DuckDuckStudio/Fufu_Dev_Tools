name: Pack Releases

on:
  workflow_dispatch:
    inputs:
      version:
        description: 版本号 (不带v)
        required: true

jobs:
  auto-pack-releases:
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置 Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: 更新版本号
        env:
          PYTHONIOENCODING: utf-8
        # 前面已经配置过 Python 了，这个脚本只用 os 和 sys 这两个标准库，不用再装依赖
        run: |
          python "自动化脚本/修改版本号.py" "${{ github.event.inputs.version }}"

      - name: 克隆主仓库
        run: |
          git clone https://github.com/DuckDuckStudio/Fufu_Tools.git

      - name: 安装依赖
        # 包括开发工具包与打包工具的依赖
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
          pip list
          echo ========================================
          $upx_url = (Invoke-WebRequest -Uri https://api.github.com/repos/upx/upx/releases/latest).Content | ConvertFrom-Json | Select-Object -ExpandProperty assets | Where-Object { $_.name -like "*win64.zip" } | Select-Object -ExpandProperty browser_download_url
          Write-Host "[INFO] Latest UPX download URL: $upx_url"
          Invoke-WebRequest -Uri $upx_url -OutFile "upx-latest.zip"
          7z x "upx-latest.zip" -o"."

      - name: 构建发行版
        # 整理文件 > 打包 > 压缩
        env:
          PYTHONIOENCODING: utf-8
        run: |
          xcopy "开发工具-打包" "开发工具-打包-done" /E /I
          echo ========================================
          python "自动化脚本\Auto-Pack-Pyinstaller.py"
          echo ========================================
          mkdir 构建文件
          7z a "构建文件\Fufu_Tools_Dev_Tools_${{ github.event.inputs.version }}.zip" "开发工具-源码"
          7z a "构建文件\Fufu_Tools_Dev_Tools_${{ github.event.inputs.version }}.7z" "开发工具-源码"
          copy "packaging_log.log" "构建文件\打包日志.log"
          copy "LICENSE" "构建文件\LICENSE"
          echo ========================================
          tree /a /f

      - name: 打包安装程序
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/jrsoftware/issrc/main/Files/Languages/Unofficial/ChineseSimplified.isl" -OutFile "C:\Program Files (x86)\Inno Setup 6\Languages\ChineseSimplified.isl"
          iscc pack.iss

      - name: 上传构建文件
        uses: actions/upload-artifact@v4
        with:
          name: 构建文件
          path: 构建文件\**
